# https://www.elastic.co/blog/getting-started-with-the-elastic-stack-and-docker-compose
# https://github.com/grafana/k6/blob/master/docker-compose.yml
# https://www.elastic.co/guide/en/elasticsearch/reference/current/docker.html
# https://github.com/elastic/dockerfiles/tree/8.10/elasticsearch
---
version: "3.8"

volumes:
#  certs:
#    driver: local
  esdata01:
    driver: local

networks:
  default:
    name: elastic
    external: false
  monitoring:
    name: monitoring
    external: false

services:
  k6:
    depends_on:
      elasticsearch:
        condition: service_healthy
      es-setup:
        condition: service_completed_successfully
    image: grafana/k6:0.47.0
    command:
      - run
      - -o
      - experimental-prometheus-rw
      - /scripts/movies-performance-test.js
    networks:
      - default
      - monitoring
    ports:
      - "6565:6565"
    environment:
      - HOST=http://elasticsearch:9200
      - K6_PROMETHEUS_RW_SERVER_URL=http://prometheus:9090/api/v1/write
#      - K6_OUT=influxdb=http://influxdb:8086/k6
    volumes:
      - ./:/scripts

  elasticsearch:
    image: elasticsearch:8.10.4
    volumes:
      - esdata01:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
#      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
#    mem_limit: 1g
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s http://localhost:9200 |grep 'You Know, for Search' ",
        ]
      interval: 10s
      timeout: 10s
      retries: 120
  es-setup:
    image: curlimages/curl
    depends_on:
      elasticsearch:
        condition: service_healthy
    restart: "no"
    command: >-
      curl
      -H "Content-Type: application/json"
      -XPUT 'http://elasticsearch:9200/_all/_settings' 
      -d '{"index.number_of_replicas" : "0"}' &&
      curl
      -H "Content-Type: application/json"
      -XPUT 'http://elasticsearch:9200/_all/_settings' 
      -d '{"index.number_of_shards" : "1"}'

  # Cerebro Elasticsearch client
  cerebro:
    image: yannart/cerebro:latest
    ports:
      - "9000:9000"
#    networks:
#      - app_net
  grafana:
    image: grafana/grafana:latest
    networks:
      - monitoring
    ports:
      - "3000:3000"
    environment:
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_BASIC_ENABLED=false
    volumes:
#      - ./dashboards:/var/lib/grafana/dashboards
#      - ./grafana-dashboard.yaml:/etc/grafana/provisioning/dashboards/dashboard.yaml
      - ./grafana/grafana-datasource.yaml:/etc/grafana/provisioning/datasources/datasource.yaml
  prometheus:
    image: prom/prometheus:v2.47.2
    command:
      - '--enable-feature=remote-write-receiver'
      - '--config.file=/etc/prometheus/prometheus.yml'
    volumes:
      - "./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml"
    networks:
      - monitoring
    ports:
      - 9090:9090
